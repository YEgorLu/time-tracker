// Package rest Code generated by swaggo/swag. DO NOT EDIT
package rest

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://github.com/MartinHeinz/go-project-blueprint/blob/master/LICENSE"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/profile": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "summary": "Updates all Profile fields",
                "parameters": [
                    {
                        "description": "Profile ID",
                        "name": "Id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Passport Serie",
                        "name": "PassportSerie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Passport Number",
                        "name": "PassportNumber",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Name",
                        "name": "Name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Surname",
                        "name": "Surname",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Patronymic",
                        "name": "Patronymic",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Address",
                        "name": "Address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Creates profile using given passport data",
                "parameters": [
                    {
                        "description": "0000 000000",
                        "name": "PassportNumber",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/profile/list": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Returns list of filtered profiles",
                "parameters": [
                    {
                        "description": "Name",
                        "name": "Name",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Surname",
                        "name": "Surname",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Patronymic",
                        "name": "Patronymic",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Address",
                        "name": "Address",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Passport Data",
                        "name": "Passport",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/profile.asd"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/profile.listRes"
                        }
                    }
                }
            }
        },
        "/profile/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Returns profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/profile.listRes"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes given profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/tasks/timer/{id}/stop": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Stops timer and creates worktime on task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Timer Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/task.s"
                            }
                        }
                    }
                }
            }
        },
        "/timer/start": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Starts timer on given task",
                "parameters": [
                    {
                        "description": "Task ID",
                        "name": "taskId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "User ID",
                        "name": "userId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/task.startRes"
                        }
                    }
                }
            }
        },
        "/work-time/list": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Returns tasks with their overall work times sorted by work time descending",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Timestamp Start",
                        "name": "timestampStart",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Timestamp End",
                        "name": "timestampEnd",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/worktime.swagListReq"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_YEgorLu_time-tracker_internal_service_profile_models.Profile": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passportNumber": {
                    "type": "string"
                },
                "passportSerie": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "profile.asd": {
            "type": "object",
            "properties": {
                "passportNumber": {
                    "type": "string"
                },
                "passportSerie": {
                    "type": "string"
                }
            }
        },
        "profile.listRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_YEgorLu_time-tracker_internal_service_profile_models.Profile"
                    }
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "task.s": {
            "type": "object",
            "properties": {
                "timerId": {
                    "type": "string"
                }
            }
        },
        "task.startRes": {
            "type": "object",
            "properties": {
                "timerId": {
                    "type": "string"
                }
            }
        },
        "worktime.swagListReq": {
            "type": "object",
            "properties": {
                "ms": {
                    "type": "integer"
                },
                "taskId": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Time Tracker Swagger API",
	Description:      "Swagger API for Time Tracker.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
